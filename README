Usually, you shouldn't have to do anything besides "/load otr" to have encrypted
conversations. Just  write something, wait  about 10  seconds and you  should go
secure. Not the first time though, see  the next paragraph about keys. Also some
uncommon IRC  servers strip off the  whitespace OTR uses as  announcement, there
you or your buddy will have to type "?OTR?" to get going.

Initially  a  private key  will  have  to be  generated.  OTR  will trigger  key
generation itself once  you talk to someone  with OTR. You can  however start it
yourself with "/otr genkey nick@irc.server.com". That can take two minutes or on
some systems even an hour. To speed up the process you can generate some entropy
by running something like "du /" in parallel.

To make  sure that you are  actually talking to your  buddy, you can agree  on a
secret somehow  and then one does  "/otr auth <secret>". Shortly  afterwards the
other one will be asked to do  the same and you're done.

I also strongly  recommend to do "/statusbar window add  otr" so you're informed
about  what's going  on.

In  "~/.irssi/otr/otr.{key,fp}" you'll  find the  fingerprints and  your private
keys(should you at any point be interested).

The standard  OTR policy  is opportunistic, meaning  we'll send  some whitespace
after messages and we'll also look for it from our peer. Should we see the magic
whitespace from  our peer  we'll start a  handshake. If at  any point  you enter
"/otr finish" then the  policy is changed so as not  to send whitespace anymore.
Therefore, if your peer  has the same behaviour, OTR will  not start again. This
is however  reset once you  close the  query window. When  you open a  new query
window OTR  will start sending whitespace  again which might cause  your peer to
start an OTR session.

Don't expect any of  this to work if you are using a  single messages window and
not a  query window per  buddy (as in "/SET  use_msgs_window ON"). I  just heard
about that, certainly needs some work to support that mode.

Commands:

/otr genkey nick@irc.server.com 
	Manually generate a key for the given account(also done on demand)
/otr auth [<nick>@<server>] <secret>
	Initiate or respond to an authentication challenge
/otr authabort [<nick>@<server>] 
	Abort any ongoing authentication
/otr trust [<nick>@<server>]
	Trust the fingerprint of the user in the current window.
	You should only do this after comparing fingerprints over a secure line
/otr debug
	Switch debug mode on/off
/otr contexts
	List all OTR contexts along with their fingerprints and status
/otr finish [<nick>@<server>]
	Finish an OTR conversation
/otr version
	Display irssi-otr version. Might be a git commit
